How to build on ESP32
=====================

Make Variables
==============

port=                ESP32 USB port to flash to (default: port=/dev/ttyUSB0)
BUILD_BASE           base directory for builds (default: BUILD_BASE=build)
flavor               selects a subfolder in ./src directory. (default: esp32)
IPADDR               ip4 address of a running tronferno-esp32 (default: 192.168.1.65)


Make Targets
============

Note: Targets prefixed esp32- are mostly the same like in idf.py (without the "esp32-" prefix)

Configuring
-----------
esp32-menuconfig:    interactive configuration before compiling

Building Firmware
-----------------
esp32-all:           compile to build/esp32 directory (with non-interactive configuration)
esp32-app:           compile app only

Flashing Binaries
-----------------
esp32-flash:         flash binary files to the ESP32 device via serial port
esp32-flash-ocd:     flash binary files to the esp32 via openocd (JTAG)
esp32-flash-app-ocd: flash app-binary file to the esp32 via openocd (JTAG)

Clean up
--------
esp32-clean:         delete built esp32 files
esp32-fullclean:     delete built esp32 and configuration files
clean:               delete any built files

Web development
---------------
http_proxy:          run http proxy for webapp development
http_proxy2:
http_clean:          clean built webapp files
env:                 print IDF environment variables

Documentation
-------------

help:                print this help text
doxy-XXX-build:      build documentation using doxygen.  XXX can be one of: usr, dev, api
doxy-XXX-view        build and view documentation in browser

Debugging
---------
esp32-monitor:       open serial monitor of ESP_IDF
esp32-ocd:           run openocd server for debugging
esp32-ocd-loop:      run openocd server in a loop, so it will wait and restart after e.g. flash-ocd is done
telnet:              connect to CLI of a running tronferno-ESP32 via telnet

Testing on Host
---------------
test.cm.configure:   configure host tests
test.cm.build:       compile host test
host-test-all:       run all host tests

On-Chip-Testing
---------------
Note: on chip testing ist currently not working at all
esp32-test-build:    build test firmware
esp32-test-flash:    build and flash test firmware
esp32-test-run:      run python script to check test results
esp32-test-all:      build, flash and run tests
